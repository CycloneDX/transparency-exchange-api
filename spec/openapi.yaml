# $schema: https://spec.openapis.org/oas/3.1/schema-base/2025-02-13
openapi: 3.1.1
jsonSchemaDialect: https://spec.openapis.org/oas/3.1/dialect/base
info:
  title: Transparency Exchange API
  summary: The OWASP Transparency Exchange API specification for consumers and publishers
  description: TBC
  contact:
    name: TEA Working Group
    email: tbc@somewhere.tld
    url: https://github.com/CycloneDX/transparency-exchange-api
  license:
    name: Apache 2.0
    url: https://github.com/CycloneDX/transparency-exchange-api/blob/main/LICENSE
  version: 0.1.0-beta.1
servers:
  - url: http://localhost/tea/v1
    description: Local development
paths:
  /product/search:
    post:
      description: |
        Search for a TEA Product by it's TEI (Transparency Exchange Identifier).
      operationId: searchProduct
      requestBody:
        description: Search criteria for a TEA Product
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tei: 
                  $ref: "#/components/schemas/tei"
      responses:
        '200':
           description: TEA Product found and returned
           content:
            application/json:
              schema:
                "$ref": "#/components/schemas/product"
        '400':
          $ref: "#/components/responses/400-invalid-request"
        '404':
          description: No TEA Product on this TEA Service with supplied TEI
      tags:
        - TEA Product

  /component/{id}:
    get:
      description: Get a TEA Component by it's Identifier
      operationId: getTeaComponentById
      parameters:
        - name: id
          in: path
          required: true
          description: Identifier of the TEA Component to request from the TEA Service
          schema:
            $ref: "#/components/schemas/uuid"
      responses:
        '200':
          description: Requested TEA Component found and returned
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/component"
        '400':
          $ref: "#/components/responses/400-invalid-request"
        '404':
          $ref: "#/components/responses/404-object-by-id-not-found"
      tags:
        - TEA Component
    
  /component/{id}/collections:
    get:
      description: Get a list of TEA Collections for this TEA Component
      operationId: getCollectionsForComponent
      parameters:
        - name: id
          in: path
          required: true
          description: ID of TEA Component in the TEA Service
          schema:
            $ref: "#/components/schemas/uuid"
      responses:
        '200':
          description: Requested TEA Collection found and returned
          content:
            application/json:
              schema:
                # TODO: Paginate this response
                type: array
                items:
                  "$ref": "#/components/schemas/collection"
        '400':
          $ref: "#/components/responses/400-invalid-request"
        '404':
          $ref: "#/components/responses/404-object-by-id-not-found"
      tags:
        - TEA Collection
  
  /component/{id}/collection/latest:
    get:
      description: Get the latest TEA Collection belonging for this TEA Component
      operationId: getLatestCollectionForComponent
      parameters:
        - name: id
          in: path
          required: true
          description: ID of TEA Component in the TEA Service
          schema:
            $ref: "#/components/schemas/uuid"
      responses:
        '200':
          description: Requested TEA Collection found and returned
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/collection"
        '400':
          $ref: "#/components/responses/400-invalid-request"
        '404':
          $ref: "#/components/responses/404-object-by-id-not-found"
      tags:
        - TEA Collection
  
  /component/{id}/collection/{version}:
     get:
      description: Get the specified TEA Collection version belonging for this TEA Component
      operationId: getCollectionForComponentByVersion
      parameters:
        - name: id
          in: path
          required: true
          description: ID of TEA Component in the TEA Service
          schema:
            $ref: "#/components/schemas/uuid"
        - name: version
          in: path
          required: true
          description: Version of TEA Collection
          schema:
            type: integer
      responses:
        '200':
          description: Requested TEA Collection Version found and returned
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/collection"
        '400':
          $ref: "#/components/responses/400-invalid-request"
        '404':
          $ref: "#/components/responses/404-object-by-id-not-found"
      tags:
        - TEA Collection
      

  # OLD
  # /product/{uuid}:
  #   get:
  #     description: Returns the corresponding TEA components for a given TEA product UUID.
  #     operationId: getTeaProductByUuid
  #     parameters:
  #       - name: uuid
  #         in: path
  #         required: true
  #         description: UUID of the TEA product in the TEA server
  #         schema:
  #           type: string
  #           format: uuid
  #     responses:
  #       '200':
  #         description: Requested TEA Product found and returned
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/product"
  #       '400':
  #         $ref: "#/components/responses/400-invalid-request"
  #       '404':
  #         $ref: "#/components/responses/404-object-by-id-not-found"
  #     tags:
  #       - TEA Product
  
  # /product/{uuid}/releases:
  #   get:
  #     description: Get a list of Product Releases for this Product
  #     operationId: getProductReleasesForProduct
  #     parameters:
  #       - name: uuid
  #         in: path
  #         required: true
  #         description: UUID of the TEA Product in the TEA server
  #         schema:
  #           type: string
  #           format: uuid
  #     responses:
  #       '200':
  #         $ref: "#/components/responses/paginated-product-release"
  #       '204':
  #         description: No Product Releases published for this TEA Product
  #     tags:
  #       - TEA Product Release
  # /component/{uuid}:
  #   get:
  #     description: Get a TEA Component
  #     operationId: getTeaComponentById
  #     parameters:
  #       - name: uuid
  #         in: path
  #         required: true
  #         description: UUID of TEA Component in the TEA server
  #         schema:
  #           type: string
  #           format: uuid
  #     responses:
  #       '200':
  #         description: Requested TEA Component found and returned
  #         content:
  #           application/json:
  #             schema:
  #               "$ref": "#/components/schemas/component"
  #       '400':
  #         $ref: "#/components/responses/400-invalid-request"
  #       '404':
  #         $ref: "#/components/responses/404-object-by-id-not-found"
  #     tags:
  #       - TEA Component
  # /component/{uuid}/releases:
  #   get:
  #     description: Get releases of the component
  #     operationId: getReleasesByComponentId
  #     parameters:
  #       - name: uuid
  #         in: path
  #         required: true
  #         description: UUID of TEA Component in the TEA server
  #         schema:
  #           type: string
  #           format: uuid
  #     responses:
  #       '200':
  #         description: Requested Releases of TEA Component found and returned
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 "$ref": "#/components/schemas/release"
  #       '400':
  #         $ref: "#/components/responses/400-invalid-request"
  #       '404':
  #         $ref: "#/components/responses/404-object-by-id-not-found"
  #     tags:
  #       - TEA Component
  # /release/{uuid}/collection:
  #   get:
  #     description: Get the latest TEA Collection belonging to the TEA Release
  #     operationId: getLatestCollectionByReleaseId
  #     parameters:
  #       - name: uuid
  #         in: path
  #         required: true
  #         description: UUID of TEA Release in the TEA server
  #         schema:
  #           type: string
  #           format: uuid
  #     responses:
  #       '200':
  #         description: Requested TEA Collection found and returned
  #         content:
  #           application/json:
  #             schema:
  #               "$ref": "#/components/schemas/collection"
  #       '400':
  #         $ref: "#/components/responses/400-invalid-request"
  #       '404':
  #         $ref: "#/components/responses/404-object-by-id-not-found"
  #     tags:
  #       - TEA Release
  # /release/{uuid}/collections:
  #   get:
  #     description: Get the TEA Collections belonging to the TEA Release
  #     operationId: getCollectionsByReleaseId
  #     parameters:
  #       - name: uuid
  #         in: path
  #         required: true
  #         description: UUID of TEA Release in the TEA server
  #         schema:
  #           type: string
  #           format: uuid
  #     responses:
  #       '200':
  #         description: Requested TEA Collection found and returned
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 "$ref": "#/components/schemas/collection"
  #       '400':
  #         $ref: "#/components/responses/400-invalid-request"
  #       '404':
  #         $ref: "#/components/responses/404-object-by-id-not-found"
  #     tags:
  #       - TEA Release
  # /release/{uuid}/collection/{version}:
  #   get:
  #     description: Get all versions of a TEA Collection by its UUID
  #     operationId: getTeaCollectionVersionByCollectionIdAndVersion
  #     parameters:
  #       - name: uuid
  #         in: path
  #         required: true
  #         description: UUID of TEA Collection in the TEA server
  #         schema:
  #           "$ref": "#/components/schemas/uuid"
  #       - name: version
  #         in: path
  #         required: true
  #         description: Version of TEA Collection
  #         schema:
  #           type: integer
  #     responses:
  #       '200':
  #         description: Requested TEA Collection Version found and returned
  #         content:
  #           application/json:
  #             schema:
  #               "$ref": "#/components/schemas/collection"
  #       '400':
  #         $ref: "#/components/responses/400-invalid-request"
  #       '404':
  #         $ref: "#/components/responses/404-object-by-id-not-found"
  #     tags:
  #       - TEA Release
  /artifact/{id}:
    get:
      description: Get metadata for specific TEA Artifact
      operationId: getArtifact
      parameters:
        - name: id
          in: path
          required: true
          description: ID of TEA Artifact in the TEA Service
          schema:
            "$ref": "#/components/schemas/uuid"
      responses:
        '200':
          description: Requested TEA Artifact metadata found and returned
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/artifact"
        '400':
          $ref: "#/components/responses/400-invalid-request"
        '404':
          $ref: "#/components/responses/404-object-by-id-not-found"
      tags:
        - TEA Artifact
components:
  schemas:
    #
    # Definitions reused in multiple domain objects
    #
    date-time:
      type: string
      format: date-time
    identifier:
      type: object
      description: An identifier with a specified type
      properties:
        idType:
          description: Type of identifier, e.g. `TEI`, `PURL`, `CPE`
          "$ref": "#/components/schemas/identifier-type"
        idValue:
          description: Identifier value
          type: string
    identifier-type:
      type: string
      description: Enumeration of identifiers types
      enum:
        - CPE
        - TEI
        - PURL
    tei:
      type: string
      description: Transparency Exchange Identifier
      pattern: "^urn:tei:(ean|hash|purl|swid|uuid):([a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]):(.*)$"
      examples:
        - urn:tei:ean:philips-hue.com:8719514329928
        - urn:tei:hash:cyclonedx.org:SHA256:fd44efd601f651c8865acf0dfeacb0df19a2b50ec69ead0262096fd2f67197b9
        - urn:tei:purl:cyclonedx.org:pkg:pypi/cyclonedx-python-lib@8.4.0?extension=whl&qualifier=py3-none-any
        - urn:tei:swid:redhat.com:<swid>
        - urn:tei:uuid:dependencytrack.org:e59390a2-a0b2-4a62-bf0a-459599a8c92f
    uuid:
      type: string
      description: A UUIDv4 string
      format: uuid
      pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"

    #
    # TEA Product
    #
    product:
      type: object
      description: A TEA product
      properties:
        # uuid:
        #   description: A unique identifier for the TEA product
        #   "$ref": "#/components/schemas/uuid"
        name:
          type: string
          description: Product name
        version:
          type: string
          description: |
            Product version, if applicable.

            **Note:** `TEI` + `Product Version` must be unique within a TEA Service.
        createdAt:
          description: "When this Product was published to this TEA Service"
          $ref: "#/components/schemas/date-time"
        updatedAt:
          description: "When this Product was updated in this TEA Service"
          $ref: "#/components/schemas/date-time"
        preRelease:
          type: boolean
          default: false
          description: |
            A flag indicating if this is a pre-release (e.g. a beta).

            This flag can be updated from `true` to `false`.
        identifiers:
          type: array
          description: List of identifiers for the product
          items:
            "$ref": "#/components/schemas/identifier"
        components:
          type: array
          description: List of TEA components for the product
          items:
            description: Unique identifier of the TEA component
            "$ref": "#/components/schemas/uuid"
      required:
        - uuid
        - name
        - createdAt
        - preRelease
        - identifiers
        - components
      examples:
        - uuid: 09e8c73b-ac45-4475-acac-33e6a7314e6d
          name: Apache Log4j 2
          version: 2.12.0
          createdAt: 2017-07-21T17:32:28.003Z
          preRelease: false
          identifiers:
            - idType: CPE
              idValue: cpe:2.3:a:apache:log4j:2.12.0
            - idType: PURL
              idValue: pkg:maven/org.apache.logging.log4j/log4j-api@2.12.0
            - idType: PURL
              idValue: pkg:maven/org.apache.logging.log4j/log4j-core@2.12.0
            - idType: PURL
              idValue: pkg:maven/org.apache.logging.log4j/log4j-layout-template-json@2.12.0
          components:
            - 3910e0fd-aff4-48d6-b75f-8bf6b84687f0
            - b844c9bd-55d6-478c-af59-954a932b6ad3
            - d6d3f754-d4f4-4672-b096-b994b064ca2d

    #
    # TEA Component and related objects
    #
    component:
      type: object
      description: |
        A TEA Component - which is part of a TEA Product.
        
        For example, a Philips Hue Starter Pack might be a Product comprised of 3 Components:
        1. Philips Hue Bridge
        2. Philips Hue Button
        3. Philips Hue Bulb

        It is also permissible for a TEA Component to also be a TEA Product by also creating a 
        separate TEA Product that refers to same TEA Component.
      properties:
        uuid:
          description: A unique identifier for the TEA component
          "$ref": "#/components/schemas/uuid"
        name:
          type: string
          description: Component name
        version:
          type: string
          description: Component version, which might differ from the TEA Product version
      required:
        - uuid
        - name
      examples:
        - uuid: 3910e0fd-aff4-48d6-b75f-8bf6b84687f0
          name: Apache Log4j API
          version: 2.12.0

        - uuid: b844c9bd-55d6-478c-af59-954a932b6ad3
          name: Apache Log4j Core
          version: 2.12.0

    #
    # TEA Release and related objects
    #
    # release:
    #   type: object
    #   properties:
    #     uuid:
    #       description: A unique identifier for the TEA Component Release
    #       "$ref": "#/components/schemas/uuid"
    #     version:
    #       description: Version number
    #       type: string
    #       example: 1.2.3
    #     releaseDate:
    #       description: Timestamp of the release (for sorting purposes)
    #       "$ref": "#/components/schemas/date-time"
    #     preRelease:
    #       type: boolean
    #       description: |
    #         A flag indicating pre-release (or beta) status.
    #         May be disabled after the creation of the release object, but can't be enabled after creation of an object.
    #     identifiers:
    #       type: array
    #       description: List of identifiers for the component
    #       items:
    #         "$ref": "#/components/schemas/identifier"
    #     # add lifecycle here
    #   required:
    #     - uuid
    #     - version
    #     - releaseDate
    #   examples:
    #     # Apache Tomcat 11.0.6
    #     - uuid: 605d0ecb-1057-40e4-9abf-c400b10f0345
    #       version: "11.0.6"
    #       releaseDate: 2025-04-01T15:43:00Z
    #       identifiers:
    #         - idType: PURL
    #           idValue: pkg:maven/org.apache.tomcat/tomcat@11.0.6
    #     # Different release of Apache Tomcat
    #     - uuid: da89e38e-95e7-44ca-aa7d-f3b6b34c7fab
    #       version: "10.1.40"
    #       releaseDate: 2025-04-01T18:20:00Z
    #       identifiers:
    #         - idType: PURL
    #           idValue: pkg:maven/org.apache.tomcat/tomcat@10.1.40
    #     # A pre-release of Apache Tomcat
    #     - uuid: 95f481df-f760-47f4-b2f2-f8b76d858450
    #       version: "11.0.0-M26"
    #       releaseDate: 2024-09-13T17:49:00Z
    #       preRelease: true
    #       identifiers:
    #         - idType: PURL
    #           idValue: pkg:maven/org.apache.tomcat/tomcat@11.0.0-M26

    #
    # TEA Collection and related objects
    #
    collection:
      type: object
      description: A collection of security-related documents
      properties:
        id:
          description: |
            ID of this TEA Collection object.
            
            **Note:** When updating a TEA Collection, only the `version` is changed, the `id` remains static.
          "$ref": "#/components/schemas/uuid"
        version:
          type: integer
          description: |
            TEA Collection version, incremented each time its content changes.

            Versioning starts at `1`.
        createdAt:
          description: The date when this TEA Collection version was created
          "$ref": "#/components/schemas/date-time"
        updateReason:
          description: Reason for the update/release of the TEA Collection object.
          "$ref": "#/components/schemas/collection-update-reason"
        artifacts:
          type: array
          description: List of TEA artifact objects.
          items:
            "$ref": "#/components/schemas/artifact"
      examples:
        # Documents in the latest release of Log4j Core
        - id: 4c72fe22-9d83-4c2f-8eba-d6db484f32c8
          version: 3
          createdAt: 2024-12-13T01:00:00Z
          updateReason:
            type: VEX_UPDATED
            comment: VEX added/update in BOM
          artifacts:
            - uuid: 1cb47b95-8bf8-3bad-a5a4-0d54d86e10ce
              name: Build SBOM
              type: BOM
              formats:
                - mime_type: application/vnd.cyclonedx+xml
                  description: CycloneDX SBOM (XML)
                  url: https://repo.maven.apache.org/maven2/org/apache/logging/log4j/log4j-core/2.24.3/log4j-core-2.24.3-cyclonedx.xml
                  signature_url: https://repo.maven.apache.org/maven2/org/apache/logging/log4j/log4j-core/2.24.3/log4j-core-2.24.3-cyclonedx.xml.asc
                  checksums:
                    - algType: MD5
                      algValue: 2e1a525afc81b0a8ecff114b8b743de9
                    - algType: SHA-1
                      algValue: 5a7d4caef63c5c5ccdf07c39337323529eb5a770
            - uuid: dfa35519-9734-4259-bba1-3e825cf4be06
              name: Vulnerability Disclosure Report
              type: vulnerability-assertion
              formats:
                - mime_type: application/vnd.cyclonedx+xml
                  description: CycloneDX VDR (XML)
                  url: https://logging.apache.org/cyclonedx/vdr.xml
                  checksums:
                    - algType: SHA-256
                      algValue: 75b81020b3917cb682b1a7605ade431e062f7a4c01a412f0b87543b6e995ad2a
        - id: 356da364-6c0b-4658-94f6-746de5f73260
          version: 2
          createdAt: 2024-12-13T00:00:00Z
          updateReason:
            type: ARTIFACT_UPDATED
            comment: VDR added
          artifacts:
            - uuid: 1cb47b95-8bf8-3bad-a5a4-0d54d86e10ce
              name: Build SBOM
              type: BOM
              formats:
                - mime_type: application/vnd.cyclonedx+xml
                  description: CycloneDX SBOM (XML)
                  url: https://repo.maven.apache.org/maven2/org/apache/logging/log4j/log4j-core/2.24.3/log4j-core-2.24.3-cyclonedx.xml
                  signature_url: https://repo.maven.apache.org/maven2/org/apache/logging/log4j/log4j-core/2.24.3/log4j-core-2.24.3-cyclonedx.xml.asc
                  checksums:
                    - algType: MD5
                      algValue: 2e1a525afc81b0a8ecff114b8b743de9
                    - algType: SHA-1
                      algValue: 5a7d4caef63c5c5ccdf07c39337323529eb5a770
            - uuid: dfa35519-9734-4259-bba1-3e825cf4be06
              name: Vulnerability Disclosure Report
              type: vulnerability-assertion
              formats:
                - mime_type: application/vnd.cyclonedx+xml
                  description: CycloneDX VDR (XML)
                  url: https://logging.apache.org/cyclonedx/vdr.xml
                  checksums:
                    - algType: SHA-256
                      algValue: 75b81020b3917cb682b1a7605ade431e062f7a4c01a412f0b87543b6e995ad2a
        - id: a5972b84-22d4-4c87-b9e0-67d68ad0ccc3
          version: 1
          createdAt: 2024-11-13T00:00:00Z
          updateReason:
            type: INITIAL_RELEASE
            comment: First release
          artifacts:
            - uuid: 1cb47b95-8bf8-3bad-a5a4-0d54d86e10ce
              name: Build SBOM
              type: BOM
              formats:
                - mime_type: application/vnd.cyclonedx+xml
                  description: CycloneDX SBOM (XML)
                  url: https://repo.maven.apache.org/maven2/org/apache/logging/log4j/log4j-core/2.24.3/log4j-core-2.24.3-cyclonedx.xml
                  signature_url: https://repo.maven.apache.org/maven2/org/apache/logging/log4j/log4j-core/2.24.3/log4j-core-2.24.3-cyclonedx.xml.asc
                  checksums:
                    - algType: MD5
                      algValue: 2e1a525afc81b0a8ecff114b8b743de9
                    - algType: SHA-1
                      algValue: 5a7d4caef63c5c5ccdf07c39337323529eb5a770

    collection-update-reason:
      type: object
      description: Reason for the update to the TEA collection
      properties:
        type:
          description: Type of update reason.
          "$ref": "#/components/schemas/collection-update-reason-type"
        comment:
          type: string
          description: Free text description
    collection-update-reason-type:
      type: string
      description: Type of TEA collection update
      enum:
        - INITIAL_RELEASE
        - VEX_UPDATED
        - ARTIFACT_UPDATED
        - ARTIFACT_ADDED
        - ARTIFACT_REMOVED

    #
    # TEA Artifact and related objects
    #
    artifact:
      type: object
      description: A security-related document
      properties:
        id:
          description: ID of the TEA Artifact object
          "$ref": "#/components/schemas/uuid"
        name:
          type: string
          description: Artifact name
        type:
          description: Type of artifact
          "$ref": "#/components/schemas/artifact-type"
        formats:
          type: array
          description: |
            List of objects with the same content, but in different formats.
            The order of the list has no significance.
          items:
            "$ref": "#/components/schemas/artifact-format"
    artifact-type:
      type: string
      description: Specifies the type of external reference.
      enum:
        - ATTESTATION
        - BOM
        - BUILD_META
        - CERTIFICATION
        - FORMULATION
        - LICENSE
        - RELEASE_NOTES
        - SECURITY_TXT
        - THREAT_MODEL
        - VULNERABILITIES
        - OTHER
    artifact-format:
      type: object
      description: A security-related document in a specific format
      properties:
        mime_type:
          type: string
          description: The MIME type of the document
        description:
          type: string
          description: A free text describing the artifact
        url:
          type: string
          description: Direct download URL for the artifact
          format: url
        signatureUrl:
          type: string
          description: Direct download URL for an external signature of the artifact
          format: url
        checksums:
          type: array
          description: List of checksums for the artifact
          items:
            "$ref": "#/components/schemas/artifact-checksum"
    artifact-checksum:
      type: object
      properties:
        algType:
          description: Checksum algorithm
          "$ref": "#/components/schemas/artifact-checksum-type"
        algValue:
          type: string
          description: Checksum value
    artifact-checksum-type:
      type: string
      description: Checksum algorithm
      enum:
        - MD5
        - SHA-1
        - SHA-256
        - SHA-384
        - SHA-512
        - SHA3-256
        - SHA3-384
        - SHA3-512
        - BLAKE2b-256
        - BLAKE2b-384
        - BLAKE2b-512
        - BLAKE3
    #
    # Types used in API responses
    #
    pagination-details:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: '2024-03-20T15:30:00Z'
        pageStartIndex:
          type: integer
          format: int64
          default: 0
        pageSize:
          type: integer
          format: int64
          default: 100
        totalResults:
          type: integer
          format: int64
      required:
        - timestamp
        - pageStartIndex
        - pageSize
        - totalResults
  responses:
    204-common-delete:
      description: Object deleted successfully
      content:
        application/json: {}
    400-invalid-request:
      description: Request was Invalid
      content:
        application/json: {}
    401-unauthorized:
      description: Authentication required
      content:
        application/json: {}
    404-object-by-id-not-found:
      description: Object requested by identifier not found
      content:
        application/json: {}
    # paginated-product:
    #   description: A paginated response containing TEA Products
    #   content:
    #     application/json:
    #       schema:
    #         allOf:
    #           - $ref: "#/components/schemas/pagination-details"
    #           - type: object
    #             properties:
    #               results:
    #                 type: array
    #                 items:
    #                   "$ref": "#/components/schemas/product"
    # paginated-product-release:
    #   description: A pagninated response of TEA Product Releases
    #   content:
    #     application/json:
    #       schema:
    #         allOf:
    #           - $ref: "#/components/schemas/pagination-details"
    #           - type: object
    #             properties:
    #               results:
    #                 type: array
    #                 items:
    #                   "$ref": "#/components/schemas/productRelease"
    # paginated-component:
    #   description: A pagninated response of TEA Components
    #   content:
    #     application/json:
    #       schema:
    #         allOf:
    #           - $ref: "#/components/schemas/pagination-details"
    #           - type: object
    #             properties:
    #               results:
    #                 type: array
    #                 items:
    #                   "$ref": "#/components/schemas/component"
  parameters:
    # Pagination
    page-offset:
      name: pageOffset
      description: Pagination offset
      in: query
      required: false
      schema:
        type: integer
        format: int64
        default: 0
    page-size:
      name: pageSize
      description: Pagination offset
      in: query
      required: false
      schema:
        type: integer
        format: int64
        default: 100

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    basicAuth:
      type: http
      scheme: basic
security:
  - bearerAuth: []
  - basicAuth: []
tags:
  - name: TEA Product
  - name: TEA Component
  - name: TEA Collection
  - name: TEA Artifact
externalDocs:
  description: Transparency Exchange API specification
  url: https://github.com/CycloneDX/transparency-exchange-api
